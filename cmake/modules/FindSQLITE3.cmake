SET(SQLITE3_NAMES {SQLITE3_NAMES} sqlite3)

FIND_LIBRARY(SQLITE3_LIBRARY
	NAMES ${SQLITE3_NAMES}
	HINTS ENV LD_LIBRARY_PATH)

get_filename_component(SQLITE3_LIBARY_PATH ${SQLITE3_LIBRARY} DIRECTORY)

FIND_PATH(SQLITE3_INCLUDE_DIR sqlite3.h
	HINTS "${SQLITE3_LIBRARY_PATH}/../include")

IF(SQLITE3_INCLUDE_DIR)
	SET(SQLITE3_VERSION 0)
	SET(SQLITE3_VERSION_H "${SQLITE3_INCLUDE_DIR}/sqlite3.h")
	FILE(READ ${SQLITE3_VERSION_H} SQLITE3_VERSION_H_CONTENTS)

	IF (DEFINED SQLITE3_VERSION_H_CONTENTS)
    STRING(REGEX REPLACE ".*# *define *SQLITE_VERSION *\\\"([0-9\\.]+)\\\".*" "\\1" SQLITE3_VERSION_NUM "${SQLITE3_VERSION_H_CONTENTS}")

    IF(NOT ${SQLITE3_VERSION_NULL} MATCHES "[0-9]+")
    		MESSAGE(FATAL_ERROR "SQLITE3 version parsing failed!")
    ENDIF()

		IF(SQLITE3_VERSION_NUM VERSION_EQUAL SQLITE3_FIND_VERSION OR
		   SQLITE3_VERSION_NUM VERSION_GREATER SQLITE3_FIND_VERSION)
     MESSAGE(STATUS "Found SQLITE3 version: ${SQLITE3_VERSION_NUM}")
		ELSE()
      MESSAGE(FATAL_ERROR "SQLITE3 version check failed. Version ${SQLITE3_VERSION_NUM} was found, at least version ${SQLITE3_FIND_VERSION} is required")
		ENDIF()

	ELSE()
    MESSAGE(FATAL_ERROR "Failed to open ${SQLITE3_VERSION_H} file")
	ENDIF()

ENDIF()

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(SQLITE3 DEFAULT_MSG SQLITE3_LIBRARY SQLITE3_INCLUDE_DIR)

IF(SQLITE3_FOUND)
	SET(SQLITE3_LIBRARIES ${SQLITE3_LIBRARY})
ENDIF()
